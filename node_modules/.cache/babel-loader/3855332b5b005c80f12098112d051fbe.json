{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/quiz-app/Quiz/src/router.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Home, Quiz, Result } from \"./pages/index\";\nimport { Header, Footer } from \"./components/index\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [questions, setQuestions] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  const getQuestions = async function () {\n    let category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let difficulty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    await fetch(`https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficulty}&type=multiple`) // .then(resp =>{\n    //     console.log(resp.results)\n    // })\n    // .catch(error => {\n    //     console.log(error)\n    // })\n    .then(res => res.json()).then(json => {\n      setQuestions(json.results);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            name: name,\n            setName: setName,\n            getQuestions: getQuestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/quiz\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Quiz, {\n            name: name,\n            questions: questions,\n            setQuestions: setQuestions,\n            score: score,\n            setScore: setScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/result\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Result, {\n            name: name,\n            score: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Router, \"gV2JKTgrM8qBF7M8wfNgpLZEwjM=\");\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/quiz-app/Quiz/src/router.js"],"names":["BrowserRouter","Routes","Route","Home","Quiz","Result","Header","Footer","useState","Router","name","setName","questions","setQuestions","score","setScore","getQuestions","category","difficulty","fetch","then","res","json","results"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,IAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAmC,eAAnC;AACA,SAASC,MAAT,EAAgBC,MAAhB,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBH,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACI,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAK,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMQ,YAAY,GAAG,kBAAwC;AAAA,QAAlCC,QAAkC,uEAAvB,EAAuB;AAAA,QAApBC,UAAoB,uEAAP,EAAO;AAC3D,UAAMC,KAAK,CAAE,kDAAiDF,QAAS,eAAcC,UAAW,gBAArF,CAAL,CACJ;AACA;AACA;AACA;AACA;AACA;AANI,KAOJE,IAPI,CAOEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPV,EAQJF,IARI,CAQEE,IAAD,IAAU;AACZT,MAAAA,YAAY,CAACS,IAAI,CAACC,OAAN,CAAZ;AACH,KAVI,CAAN;AAWC,GAZH;;AAaA,sBACI;AAAA,4BAEA,QAAC,aAAD;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEb,IAAZ;AAAkB,YAAA,OAAO,EAAEC,OAA3B;AAAoC,YAAA,YAAY,EAAEK;AAAlD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,KAAK,MAAzB;AAA0B,UAAA,OAAO,eAAE,QAAC,IAAD;AAC/B,YAAA,IAAI,EAAEN,IADyB;AAE/B,YAAA,SAAS,EAAEE,SAFoB;AAG/B,YAAA,YAAY,EAAEC,YAHiB;AAI/B,YAAA,KAAK,EAAEC,KAJwB;AAK/B,YAAA,QAAQ,EAAEC;AALqB;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eASI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,OAAO,eAAE,QAAC,MAAD;AACjC,YAAA,IAAI,EAAEL,IAD2B;AAEjC,YAAA,KAAK,EAAEI;AAF0B;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAmBA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAnBA;AAAA,kBADJ;AAwBH,CA1CD;;GAAML,M;;KAAAA,M;AA4CN,eAAeA,MAAf","sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Home , Quiz, Result} from \"./pages/index\";\nimport { Header,Footer } from \"./components/index\";\nimport { useState } from \"react\";\n\nconst Router = () => {\n    const[name,setName] = useState(\"\");\n    const[questions,setQuestions] = useState(\"\");\n    const[score,setScore] = useState(0); \n\n    const getQuestions = async(category = '',difficulty = '') => {\n      await fetch(`https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficulty}&type=multiple`)\n        // .then(resp =>{\n        //     console.log(resp.results)\n        // })\n        // .catch(error => {\n        //     console.log(error)\n        // })\n       .then((res) => res.json())\n       .then((json) => {\n           setQuestions(json.results)\n       })\n      }\n    return(\n        <>\n         \n        <BrowserRouter>\n        <Header />\n        <Routes>\n            <Route path=\"/\" exact element={<Home name={name} setName={setName} getQuestions={getQuestions}/>}/>\n            <Route path=\"/quiz\" exact element={<Quiz \n                name={name}\n                questions={questions}\n                setQuestions={setQuestions} \n                score={score}\n                setScore={setScore}\n            />}/>\n            <Route path=\"/result\" exact element={<Result \n                name={name}\n                score={score}\n            />}/>\n        </Routes>\n        </BrowserRouter>\n        <Footer />\n        \n        </>\n    )\n}\n\nexport default Router;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/quiz-app/Quiz/src/components/question.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MainDiv, Options, SingleQuestion, OptionsBtn, Select, Wrong, ControlDiv } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = _ref => {\n  _s();\n\n  let {\n    currQuestion,\n    setCurrQuestion,\n    questions,\n    options,\n    correct,\n    score,\n    setScore\n  } = _ref;\n  const navigate = useNavigate();\n  const [selected, setSelected] = useState();\n  const [err, setErr] = useState(false);\n\n  const handleSelect = i => {\n    if (selected === i && selected === correct) {\n      return Select;\n    } else if (selected === i && selected !== correct) {\n      return Wrong;\n    } else if (i === correct) {\n      return Select;\n    }\n  };\n\n  const handleCheck = i => {\n    setSelected(i);\n    if (i === correct) setScore(score + 1);\n    setErr(false);\n  };\n\n  const handleNext = () => {\n    if (currQuestion > 8) {\n      navigate('/result');\n    } else if (selected) {\n      setCurrQuestion(currQuestion + 1);\n      setSelected();\n    } else {\n      setErr(\"Please select an option first!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MainDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Question \", currQuestion + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SingleQuestion, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questions[currQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Options, {\n          className: \"option\",\n          children: [err && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose appropriate ans!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), options && options.map(i => /*#__PURE__*/_jsxDEV(OptionsBtn, {\n            onClick: () => handleCheck(i),\n            className: `${selected && handleSelect(i)}`,\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 56\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ControlDiv, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"large\",\n            style: {\n              width: 185\n            },\n            href: \"/\",\n            children: \"Quit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            style: {\n              width: 185\n            },\n            onClick: handleNext,\n            children: \"Next Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Question, \"VooB5EQIPQ6Sb6AEyPt7VktoGjM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/quiz-app/Quiz/src/components/question.js"],"names":["Button","useState","useNavigate","MainDiv","Options","SingleQuestion","OptionsBtn","Select","Wrong","ControlDiv","Question","currQuestion","setCurrQuestion","questions","options","correct","score","setScore","navigate","selected","setSelected","err","setErr","handleSelect","i","handleCheck","handleNext","question","map","width"],"mappings":"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","sourcesContent":["import { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MainDiv, Options, SingleQuestion,OptionsBtn,Select,Wrong, ControlDiv} from \"./style\";\n\nconst Question = ({\n    currQuestion,\n    setCurrQuestion,\n    questions,\n    options,\n    correct,\n    score,\n    setScore,\n}) => {\n    const navigate = useNavigate();\n    const[selected,setSelected] = useState()\n    const[err,setErr] = useState(false)\n\n    const handleSelect = (i) => {\n        if(selected === i && selected === correct){\n            return Select;\n        }else if(selected === i && selected !== correct){\n            return Wrong;\n        }else if(i === correct){\n            return Select;\n        }\n    }\n\n    const handleCheck = (i) => {\n        setSelected(i)\n        if(i === correct)setScore(score + 1)\n             setErr(false)\n    }\n\n    const handleNext = () => {\n        if(currQuestion > 8){\n            navigate('/result')\n        }else if(selected){\n            setCurrQuestion(currQuestion + 1);\n            setSelected();\n        }else{\n            setErr(\"Please select an option first!\")\n        }\n    }\n\n    return(\n        <>\n        <MainDiv>\n            <h1>Question {currQuestion + 1}</h1>\n\n            <SingleQuestion>\n                <h2>{questions[currQuestion].question}</h2>\n\n                <Options className=\"option\">\n                        {err && <p>Choose appropriate ans!</p>}\n                        {options && options.map((i) => <OptionsBtn\n                        onClick={() => handleCheck(i)}\n                        className={`${selected && handleSelect(i)}`}\n                        >{i}</OptionsBtn>)}\n                </Options>\n\n                <ControlDiv>\n                     <Button\n                     variant=\"contained\"\n                     color=\"secondary\"\n                     size=\"large\"\n                     style={{width : 185}}\n                     href=\"/\"\n                     >\n                         Quit\n                     </Button>\n                     <Button\n                         variant=\"contained\"\n                         color=\"primary\"\n                         size=\"large\"\n                         style={{width : 185}}\n                         onClick={handleNext}\n                     >\n                         Next Question\n                     </Button>\n                </ControlDiv>  \n            </SingleQuestion>\n\n        </MainDiv>\n        </>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}
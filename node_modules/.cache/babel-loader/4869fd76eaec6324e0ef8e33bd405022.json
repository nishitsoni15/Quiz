{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/quiz-app/Quiz/src/router.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Home, Question, Result } from \"./pages/index\";\nimport { Header, Footer } from \"./components/index\";\nimport { useState } from \"react\";\nimport { axios } from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [questions, setQuestions] = useState(\"\"); // const[score,setScore] = useState(0); \n\n  const getQuestions = async () => {\n    await axios.get(`https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple`).then(resp => {\n      console.log(resp.data);\n      setQuestions(resp.data);\n    }).catch(error => {\n      setQuestions(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            name: name,\n            setName: setName,\n            getQuestions: getQuestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/question\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Question, {\n            questions: questions,\n            setQuestions: setQuestions // score={score}\n            // setScore={setScore}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/result\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Router, \"XwghhjgKD1CjwXbdeDul9BcgX60=\");\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/quiz-app/Quiz/src/router.js"],"names":["BrowserRouter","Routes","Route","Home","Question","Result","Header","Footer","useState","axios","Router","name","setName","questions","setQuestions","getQuestions","get","then","resp","console","log","data","catch","error"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,IAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,eAAvC;AACA,SAASC,MAAT,EAAgBC,MAAhB,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,OAAtB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACK,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,EAAD,CAAxC,CAFiB,CAGjB;;AAEA,QAAMO,YAAY,GAAG,YAAW;AAC/B,UAAMN,KAAK,CAACO,GAAN,CAAW,gFAAX,EACFC,IADE,CACGC,IAAI,IAAG;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACAP,MAAAA,YAAY,CAACI,IAAI,CAACG,IAAN,CAAZ;AACH,KAJE,EAKFC,KALE,CAKIC,KAAK,IAAG;AACXT,MAAAA,YAAY,CAACS,KAAD,CAAZ;AACH,KAPE,CAAN;AAQE,GATH;;AAUA,sBACI;AAAA,2BACA,QAAC,aAAD;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEZ,IAAZ;AAAkB,YAAA,OAAO,EAAEC,OAA3B;AAAoC,YAAA,YAAY,EAAEG;AAAlD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,OAAO,eAAE,QAAC,QAAD;AACnC,YAAA,SAAS,EAAEF,SADwB;AAEnC,YAAA,YAAY,EAAEC,YAFqB,CAGnC;AACA;;AAJmC;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAYA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAmBH,CAlCD;;GAAMJ,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Home , Question, Result} from \"./pages/index\";\nimport { Header,Footer } from \"./components/index\";\nimport { useState } from \"react\";\nimport { axios } from \"axios\";\n\nconst Router = () => {\n    const[name,setName] = useState(\"\");\n    const[questions,setQuestions] = useState(\"\");\n    // const[score,setScore] = useState(0); \n\n    const getQuestions = async() => {\n     await axios.get(`https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple`)\n        .then(resp =>{\n            console.log(resp.data);\n            setQuestions(resp.data)\n        })\n        .catch(error =>{\n            setQuestions(error)\n        })\n      }\n    return(\n        <>\n        <BrowserRouter>\n        <Header />\n        <Routes>\n            <Route path=\"/\" exact element={<Home name={name} setName={setName} getQuestions={getQuestions}/>}/>\n            <Route path=\"/question\" exact element={<Question \n                questions={questions}\n                setQuestions={setQuestions}\n                // score={score}\n                // setScore={setScore}\n            />}/>\n            <Route path=\"/result\" exact element={<Result />}/>\n        </Routes>\n        <Footer />\n        </BrowserRouter>\n        \n        </>\n    )\n}\n\nexport default Router;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/quiz-app/Quiz/src/pages/results.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Result = _ref => {\n  _s();\n\n  let {\n    name,\n    score\n  } = _ref;\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!name) {\n      navigate('/');\n    }\n  }, [name, navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Final Score : \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(Result, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/quiz-app/Quiz/src/pages/results.js"],"names":["useEffect","useNavigate","Result","name","score","navigate"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AAEA,MAAMC,MAAM,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAiB;AACjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACID,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACG,IAAJ,EAAS;AACLE,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACJ,GAJQ,EAIP,CAACF,IAAD,EAAME,QAAN,CAJO,CAAT;AAMA,sBACI;AAAA,2BACD;AAAA,6BACI;AAAA,qCAAqBD,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADC,mBADJ;AAOH,CAfD;;GAAMF,M;UACWD,W;;;KADXC,M;AAiBN,eAAeA,MAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Result = ({name,score}) => {\nconst navigate = useNavigate()\n    useEffect(() => {\n        if(!name){\n            navigate('/')\n        }\n    },[name,navigate])\n\n    return(\n        <>\n       <div>\n           <span>Final Score : {score}</span>\n       </div>\n        </>\n    )\n}\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}
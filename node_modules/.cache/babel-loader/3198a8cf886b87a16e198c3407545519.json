{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/quiz-app/Quiz/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { ImgDiv, ImgBanner, DivBox, H1First } from \"../components/style\";\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { MenuItem } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [newData, setNewData] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [questions, setQuestions] = useState(\"\");\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    getApi();\n    getQuestions();\n  }, []);\n\n  const getApi = () => {\n    axios.get('http://localhost:3001/Categories').then(resp => {\n      setNewData(resp.data);\n    }).catch(error => {\n      setNewData(error);\n    });\n  };\n\n  const getQuestions = async () => {\n    const {\n      data\n    } = await axios.get(`https://opentdb.com/api.php?amount=10`);\n    setQuestions(data.results);\n  };\n\n  const handleSubmit = () => {\n    if (!name || !category || !level) {\n      setError(true);\n    } else {\n      setError(false);\n      props.fetchQuestions(category, level);\n      navigate('/question');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ImgDiv, {\n      children: /*#__PURE__*/_jsxDEV(ImgBanner, {\n        src: \"./undraw_online_test_gba7.svg\",\n        alt: \"home-banner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DivBox, {\n      children: [/*#__PURE__*/_jsxDEV(H1First, {\n        children: \"Quiz Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please fill all the fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 4,\n            mt: 5,\n            width: '70ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Name\",\n          variant: \"outlined\",\n          onChange: e => setName(e.target.value),\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 4,\n            width: '70ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          id: \"outlined-basic\",\n          label: \"Category\",\n          variant: \"outlined\",\n          onChange: e => setCategory(e.target.value),\n          value: category,\n          children: newData.map(cat => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: cat.value,\n            children: cat.category\n          }, cat.category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 4,\n            width: '70ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          id: \"outlined-basic\",\n          label: \"Level\",\n          variant: \"outlined\",\n          onChange: e => setLevel(e.target.value),\n          value: level,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"easy\",\n            children: \"Easy\"\n          }, \"Easy\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"medium\",\n            children: \"Medium\"\n          }, \"Medium\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"hard\",\n            children: \"Hard\"\n          }, \"Hard\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        direction: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          sx: {\n            width: '82ch',\n            height: '8ch'\n          },\n          children: \"Contained\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"iqlDIG2gGgl3xktCaJiKT6DMd3Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/quiz-app/Quiz/src/pages/home.js"],"names":["React","Box","TextField","Stack","Button","ImgDiv","ImgBanner","DivBox","H1First","axios","useState","useEffect","MenuItem","useNavigate","Home","props","navigate","newData","setNewData","name","setName","category","setCategory","level","setLevel","error","setError","questions","setQuestions","score","setScore","getApi","getQuestions","get","then","resp","data","catch","results","handleSubmit","fetchQuestions","m","mt","width","e","target","value","map","cat","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { ImgDiv , ImgBanner , DivBox, H1First} from \"../components/style\";\nimport axios from 'axios';\nimport { useState ,useEffect} from 'react';\nimport { MenuItem } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\n \nconst Home = (props) => {\n  const navigate = useNavigate();\n  const [newData,setNewData] = useState([]);\n  const[name,setName] = useState(\"\");\n  const[category,setCategory] = useState(\"\");\n  const[level,setLevel]= useState(\"\");\n  const[error,setError] = useState(false);\n  const[questions,setQuestions] = useState(\"\");\n  const[score,setScore] = useState(0); \n\n  useEffect(()=>{\n    getApi();\n    getQuestions();\n  },[])\n\n  const getApi = () => {\n    axios.get('http://localhost:3001/Categories')\n    .then(resp => {\n      setNewData(resp.data)\n    })\n    .catch(error => {\n      setNewData(error)\n    })\n  }\n\n  const getQuestions = async() => {\n    const { data } =await axios.get(`https://opentdb.com/api.php?amount=10`);\n  setQuestions(data.results)       \n  }\n  \n\n  const handleSubmit = () => {\n    if(!name||!category||!level){\n      setError(true)\n    }else{\n      setError(false)\n      props.fetchQuestions(category,level);\n      navigate('/question');\n    }\n  }\n    return(\n        <>\n        <ImgDiv>\n            <ImgBanner src=\"./undraw_online_test_gba7.svg\"  alt=\"home-banner\"/>\n        </ImgDiv>\n        {/* <button onClick={props.passingData}>Click Me</button> */}\n        <DivBox>\n        <H1First>Quiz Settings</H1First>\n        {error && <p>Please fill all the fields</p>}\n        <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': {m:4,mt:5, width: '70ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" onChange={(e) => setName(e.target.value)} value={name}/>\n    </Box>\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': {m:4, width: '70ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField select id=\"outlined-basic\" label=\"Category\" variant=\"outlined\" onChange={(e) => setCategory(e.target.value)} value={category}>\n\n     {newData.map((cat)=> (\n       <MenuItem key={cat.category} value={cat.value}>\n         {cat.category}\n       </MenuItem>\n     ))}\n        </TextField>\n    </Box>\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': {m:4, width: '70ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField select id=\"outlined-basic\" label=\"Level\" variant=\"outlined\" onChange={(e) => setLevel(e.target.value)} value={level}>\n      <MenuItem key=\"Easy\" value=\"easy\">\n        Easy\n      </MenuItem>\n      <MenuItem key=\"Medium\" value=\"medium\">\n        Medium\n      </MenuItem>\n      <MenuItem key=\"Hard\" value=\"hard\">\n        Hard\n      </MenuItem>\n        </TextField>\n    </Box>\n\n    <Stack spacing={2} direction=\"row\">\n      <Button onClick={handleSubmit} variant=\"contained\" sx={{width:'82ch',height:'8ch'}}>Contained</Button>\n    </Stack>\n        </DivBox>\n      \n        </>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}
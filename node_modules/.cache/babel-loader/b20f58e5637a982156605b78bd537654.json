{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/quiz-app/Quiz/src/router.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Home, Question, Result } from \"./pages/index\";\nimport { Header, Footer } from \"./components/index\";\nimport { useEffect, useState } from \"react\";\nimport { axios } from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [questions, setQuestions] = useState(\"\"); // const[score,setScore] = useState(0); \n\n  useEffect(() => {\n    getQuestions();\n  });\n\n  const getQuestions = () => {\n    axios.get(`http://localhost:3001/results`).then(resp => {\n      setQuestions(resp.data);\n    }).catch(error => {\n      setQuestions(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            name: name,\n            setName: setName,\n            getQuestions: getQuestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/question\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Question, {\n            name: name,\n            questions: questions,\n            setQuestions: setQuestions // score={score}\n            // setScore={setScore}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/result\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Router, \"wZHHU00wOhhtfXTXA4DVGW/Hd4Y=\");\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/quiz-app/Quiz/src/router.js"],"names":["BrowserRouter","Routes","Route","Home","Question","Result","Header","Footer","useEffect","useState","axios","Router","name","setName","questions","setQuestions","getQuestions","get","then","resp","data","catch","error"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,IAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,eAAvC;AACA,SAASC,MAAT,EAAgBC,MAAhB,QAA8B,oBAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,OAAtB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACK,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,EAAD,CAAxC,CAFiB,CAGjB;;AAEJD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY;AACf,GAFQ,CAAT;;AAII,QAAMA,YAAY,GAAG,MAAM;AACvBN,IAAAA,KAAK,CAACO,GAAN,CAAW,+BAAX,EACCC,IADD,CACMC,IAAI,IAAG;AACTJ,MAAAA,YAAY,CAACI,IAAI,CAACC,IAAN,CAAZ;AACH,KAHD,EAICC,KAJD,CAIOC,KAAK,IAAI;AACZP,MAAAA,YAAY,CAACO,KAAD,CAAZ;AACH,KAND;AAOD,GARH;;AASA,sBACI;AAAA,2BACA,QAAC,aAAD;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEV,IAAZ;AAAkB,YAAA,OAAO,EAAEC,OAA3B;AAAoC,YAAA,YAAY,EAAEG;AAAlD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,KAAK,MAA7B;AAA8B,UAAA,OAAO,eAAE,QAAC,QAAD;AACnC,YAAA,IAAI,EAAEJ,IAD6B;AAEnC,YAAA,SAAS,EAAEE,SAFwB;AAGnC,YAAA,YAAY,EAAEC,YAHqB,CAInC;AACA;;AALmC;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eASI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,KAAK,MAA3B;AAA4B,UAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAaA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAoBH,CAtCD;;GAAMJ,M;;KAAAA,M;AAwCN,eAAeA,MAAf","sourcesContent":["import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Home , Question, Result} from \"./pages/index\";\nimport { Header,Footer } from \"./components/index\";\nimport { useEffect, useState } from \"react\";\nimport { axios } from \"axios\";\n\nconst Router = () => {\n    const[name,setName] = useState(\"\");\n    const[questions,setQuestions] = useState(\"\");\n    // const[score,setScore] = useState(0); \n\nuseEffect(() => {\n    getQuestions()\n})\n\n    const getQuestions = () => {\n        axios.get(`http://localhost:3001/results`)\n        .then(resp =>{\n            setQuestions(resp.data)\n        })\n        .catch(error => {\n            setQuestions(error)\n        })\n      }\n    return(\n        <>\n        <BrowserRouter>\n        <Header />\n        <Routes>\n            <Route path=\"/\" exact element={<Home name={name} setName={setName} getQuestions={getQuestions}/>}/>\n            <Route path=\"/question\" exact element={<Question \n                name={name}\n                questions={questions}\n                setQuestions={setQuestions} \n                // score={score}\n                // setScore={setScore}\n            />}/>\n            <Route path=\"/result\" exact element={<Result />}/>\n        </Routes>\n        <Footer />\n        </BrowserRouter>\n        \n        </>\n    )\n}\n\nexport default Router;"]},"metadata":{},"sourceType":"module"}
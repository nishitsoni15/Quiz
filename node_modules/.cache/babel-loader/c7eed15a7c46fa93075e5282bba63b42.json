{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/quiz-app/Quiz/src/components/question.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = _ref => {\n  _s();\n\n  let {\n    currQuestion,\n    setCurrQuestion,\n    questions,\n    options,\n    correct,\n    score,\n    setScore,\n    setQuestions\n  } = _ref;\n  const [selected, setSelected] = useState();\n  const [err, setErr] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Question \", currQuestion + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singleQuestion\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questions[currQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: [err && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose appropriate ans!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this), options && options.map(i => /*#__PURE__*/_jsxDEV(\"button\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 56\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Question, \"HnDbB9RoWeDevUly5aMeoV4Yo9g=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/quiz-app/Quiz/src/components/question.js"],"names":["useState","Question","currQuestion","setCurrQuestion","questions","options","correct","score","setScore","setQuestions","selected","setSelected","err","setErr","question","map","i"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,QAAQ,GAAG,QASX;AAAA;;AAAA,MATY;AACdC,IAAAA,YADc;AAEdC,IAAAA,eAFc;AAGdC,IAAAA,SAHc;AAIdC,IAAAA,OAJc;AAKdC,IAAAA,OALc;AAMdC,IAAAA,KANc;AAOdC,IAAAA,QAPc;AAQdC,IAAAA;AARc,GASZ;AACF,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAyBX,QAAQ,EAAtC;AACA,QAAK,CAACY,GAAD,EAAKC,MAAL,IAAeb,QAAQ,CAAC,KAAD,CAA5B;AACA,sBACI;AAAA,2BACA;AAAA,8BACI;AAAA,gCAAcE,YAAY,GAAG,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAA,oBAAKE,SAAS,CAACF,YAAD,CAAT,CAAwBY;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,qBACSF,GAAG,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,EAESP,OAAO,IAAIA,OAAO,CAACU,GAAR,CAAaC,CAAD,iBAAO;AAAA,sBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,kBAAnB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAkBH,CA9BD;;GAAMf,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Question = ({\n    currQuestion,\n    setCurrQuestion,\n    questions,\n    options,\n    correct,\n    score,\n    setScore,\n    setQuestions\n}) => {\n    const[selected,setSelected] = useState()\n    const[err,setErr] = useState(false)\n    return(\n        <>\n        <div>\n            <h1>Question {currQuestion + 1}</h1>\n\n            <div className=\"singleQuestion\">\n                <h2>{questions[currQuestion].question}</h2>\n\n                <div className=\"option\">\n                        {err && <p>Choose appropriate ans!</p>}\n                        {options && options.map((i) => <button>{i}</button>)}\n                </div>\n\n            </div>\n\n        </div>\n        </>\n    )\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}